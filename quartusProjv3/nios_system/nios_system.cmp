	component nios_system is
		port (
			audio_BCLK                    : in    std_logic                     := 'X';             -- BCLK
			audio_DACDAT                  : out   std_logic;                                        -- DACDAT
			audio_DACLRCK                 : in    std_logic                     := 'X';             -- DACLRCK
			audio_and_video_config_0_SDAT : inout std_logic                     := 'X';             -- SDAT
			audio_and_video_config_0_SCLK : out   std_logic;                                        -- SCLK
			audio_pll_clk_clk             : out   std_logic;                                        -- clk
			audio_pll_ref_clk_clk         : in    std_logic                     := 'X';             -- clk
			audio_pll_ref_reset_reset     : in    std_logic                     := 'X';             -- reset
			clk_clk                       : in    std_logic                     := 'X';             -- clk
			hex_0_export                  : out   std_logic_vector(7 downto 0);                     -- export
			hex_1_export                  : out   std_logic_vector(7 downto 0);                     -- export
			hex_2_export                  : out   std_logic_vector(7 downto 0);                     -- export
			hex_3_export                  : out   std_logic_vector(7 downto 0);                     -- export
			hex_4_export                  : out   std_logic_vector(7 downto 0);                     -- export
			hex_5_export                  : out   std_logic_vector(7 downto 0);                     -- export
			hex_6_export                  : out   std_logic_vector(7 downto 0);                     -- export
			hex_7_export                  : out   std_logic_vector(7 downto 0);                     -- export
			keys_export                   : in    std_logic_vector(3 downto 0)  := (others => 'X'); -- export
			ledg_export                   : out   std_logic_vector(7 downto 0);                     -- export
			ledr_export                   : out   std_logic_vector(17 downto 0);                    -- export
			ps2_0_CLK                     : inout std_logic                     := 'X';             -- CLK
			ps2_0_DAT                     : inout std_logic                     := 'X';             -- DAT
			reset_reset_n                 : in    std_logic                     := 'X';             -- reset_n
			sdram_clk_clk                 : out   std_logic;                                        -- clk
			sdram_wire_addr               : out   std_logic_vector(12 downto 0);                    -- addr
			sdram_wire_ba                 : out   std_logic_vector(1 downto 0);                     -- ba
			sdram_wire_cas_n              : out   std_logic;                                        -- cas_n
			sdram_wire_cke                : out   std_logic;                                        -- cke
			sdram_wire_cs_n               : out   std_logic;                                        -- cs_n
			sdram_wire_dq                 : inout std_logic_vector(31 downto 0) := (others => 'X'); -- dq
			sdram_wire_dqm                : out   std_logic_vector(3 downto 0);                     -- dqm
			sdram_wire_ras_n              : out   std_logic;                                        -- ras_n
			sdram_wire_we_n               : out   std_logic;                                        -- we_n
			sram_DQ                       : inout std_logic_vector(15 downto 0) := (others => 'X'); -- DQ
			sram_ADDR                     : out   std_logic_vector(19 downto 0);                    -- ADDR
			sram_LB_N                     : out   std_logic;                                        -- LB_N
			sram_UB_N                     : out   std_logic;                                        -- UB_N
			sram_CE_N                     : out   std_logic;                                        -- CE_N
			sram_OE_N                     : out   std_logic;                                        -- OE_N
			sram_WE_N                     : out   std_logic;                                        -- WE_N
			switches_export               : in    std_logic_vector(17 downto 0) := (others => 'X'); -- export
			usb_0_INT1                    : in    std_logic                     := 'X';             -- INT1
			usb_0_DATA                    : inout std_logic_vector(15 downto 0) := (others => 'X'); -- DATA
			usb_0_RST_N                   : out   std_logic;                                        -- RST_N
			usb_0_ADDR                    : out   std_logic_vector(1 downto 0);                     -- ADDR
			usb_0_CS_N                    : out   std_logic;                                        -- CS_N
			usb_0_RD_N                    : out   std_logic;                                        -- RD_N
			usb_0_WR_N                    : out   std_logic;                                        -- WR_N
			usb_0_INT0                    : in    std_logic                     := 'X'              -- INT0
		);
	end component nios_system;

